services:
  db:
    image: postgres:16-alpine
    container_name: mediapanel_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${POSTGRES_PORT:-5432}:5432"

  redis:
    image: redis:7-alpine
    container_name: mediapanel_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6382}:6379"

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mediapanel_mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
      - "${MAILHOG_UI_PORT:-8025}:8025"

  backend:
    build:
      context: ./packages/backend
    container_name: mediapanel_backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PORT: ${APP_PORT}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      REDIS_URL: redis://redis:6379
    ports:
      - "${APP_HOST_PORT:-5001}:${APP_PORT:-5000}"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["node", "dist/src/main.js"]

  frontend:
    build:
      context: ./packages/frontend
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
        NEXT_PUBLIC_API_PORT: ${NEXT_PUBLIC_API_PORT}
    container_name: mediapanel_frontend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_API_PORT: ${NEXT_PUBLIC_API_PORT}
      PORT: ${FRONTEND_PORT}
    ports:
      - "${FRONTEND_HOST_PORT:-5174}:${FRONTEND_PORT:-3001}"
    depends_on:
      backend:
        condition: service_started

volumes:
  postgres_data:
